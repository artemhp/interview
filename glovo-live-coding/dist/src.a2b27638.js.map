{"version":3,"sources":["src/api.js","src/render.js","src/index.js"],"names":["BASE_URL","getAllCharacters","page","response","fetch","json","getCharacter","id","renderCharacter","root","name","status","species","type","image","card","createEl","attrs","class","img","src","appendChild","rightCol","header","text","info","element","document","createElement","Object","entries","forEach","value","setAttribute","innerText","getElementById","then","results","console","log","character","catch","err","error"],"mappings":"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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["const BASE_URL = 'https://rickandmortyapi.com/api'\n\nexport async function getAllCharacters(page = 1) {\n  const response = await fetch(`${BASE_URL}/character?page=${page}`)\n  return response.json()\n}\n\nexport async function getCharacter(id) {\n  const response = await fetch(`${BASE_URL}/character/${id}`)\n  return response.json()\n}\n","export function renderCharacter(\n  root,\n  { id, name, status, species, type, image }\n) {\n  const card = createEl('div', {\n    attrs: { 'data-id': `character-${id}`, class: 'character-card' }\n  })\n\n  const img = createEl('img', {\n    attrs: { class: 'character-pic', src: image }\n  })\n  card.appendChild(img)\n\n  const rightCol = createEl('div')\n  card.appendChild(rightCol)\n\n  const header = createEl('h2', { text: name })\n  rightCol.appendChild(header)\n\n  const info = createEl('p', { text: `${species} | ${type} | ${status}` })\n  rightCol.appendChild(info)\n\n  root.appendChild(card)\n}\n\nfunction createEl(type, { attrs, text } = {}) {\n  const element = document.createElement(type)\n\n  if (attrs) {\n    Object.entries(attrs).forEach(([name, value]) =>\n      element.setAttribute(name, value)\n    )\n  }\n\n  if (text) {\n    element.innerText = text\n  }\n\n  return element\n}\n","import { getAllCharacters } from './api'\nimport { renderCharacter } from './render'\n\nconst root = document.getElementById('app')\n\ngetAllCharacters(2)\n  .then(({ info, results }) => {\n    console.log('response', { info, results })\n    results.forEach((character) => renderCharacter(root, character))\n  })\n  .catch((err) => console.error(err))\n"]}